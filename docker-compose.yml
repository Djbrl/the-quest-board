version: "3.3"

services:

  db:
    image: postgres
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    networks:
      - thequestboard
    env_file:
      - .env

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    # image: node:18-alpine
    restart: always
    command: bash -c "npx prisma generate && npx prisma migrate deploy --schema=prisma/schema.prisma && npm start"
    working_dir: /backend
    volumes:
      - /backend
    ports:
      - ${BACKEND_HOST_PORT}:${BACKEND_CONTAINER_PORT}
      - ${PRISMA_STUDIO_PORT_1}:${PRISMA_STUDIO_PORT_1}
      - ${PRISMA_STUDIO_PORT_2}:${PRISMA_STUDIO_PORT_2}
    networks:
      - thequestboard
    depends_on:
      - db
    env_file:
      - .env

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    # image: node:18-alpine
    restart: always
    command: npm run dev
    working_dir: /frontend
    volumes:
      - /frontend
    depends_on:
      - backend
    ports:
      - ${FRONTEND_HOST_PORT}:${FRONTEND_CONTAINER_PORT}
    networks:
      - thequestboard
    env_file:
      - .env

volumes:
  db-data:
    driver: local

networks:
  thequestboard:
    driver: bridge